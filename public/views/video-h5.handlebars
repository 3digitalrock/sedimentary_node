{{#contentFor twitterTags}}
<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'/>
    <meta name="twitter:card" content="player">
    <meta name="twitter:site" content="@3DigitalRock">
    <meta name="twitter:title" content="{{video.title}}">
    <meta name="twitter:description" content="{{video.description}}">
    <meta name="twitter:image" content="{{video.thumbnails.[0]}}">
    <meta name="twitter:player" content="{{pageUrl}}.html">
    <meta name="twitter:player:width" content="360">
    <meta name="twitter:player:height" content="200">
    <meta name="twitter:player:stream" content="{{video.files.mp4_low}}">
    <meta name="twitter:player:stream:content_type" content="video/mp4">
{{/contentFor}}

<div>
    <video id="video-player" class="video-js vjs-sedimentary-skin" controls preload="auto" poster="{{video.thumbnails.[0]}}" autoplay>
        <source src="{{video.files.mp4_high}}" type='video/mp4' data-res="HD" />
        <source src="{{video.files.mp4_low}}" type='video/mp4' data-res="SD" data-default="true" />
        <source src="{{video.files.webm}}" type='video/webm' />
        <p class="vjs-no-js">To view this video please enable JavaScript, and consider upgrading to a web browser that <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a></p>
    </video>
</div>

{{> video-info}}

{{> related-studio}}

{{> related-channel}}

{{#contentFor footer}}
  <script src="/js/dist/videoplayer.js"></script>
  <script type="text/javascript">
    $(document).ready(function(){
      videojs('video-player', {
        plugins: {
          resolutions: true,
          /*sharetools: {
            embed: function(settings) {
              return "<div>Whatever you want!</div>";
            }
          }*/
        }
      });
      videojs('video-player').persistvolume({
        namespace: "3DRS-Ear-Blast"
      });
       videojs.options.flash.swf = "/js/vendor/video-js.swf";
        videojs('video-player').ready(function(){
          var singlePlayer = this;
          singlePlayer.ga();
          singlePlayer.seek();
          singlePlayer.hotkeys();
          singlePlayer.volume(0.75);
          var aspectRatio = 9/16; // Make up an aspect ratio
        
          function resizeVideoJS(){
            // Get the parent element's actual width
            var width = document.getElementById(singlePlayer.id()).parentElement.offsetWidth;
            // Remove the padding from the calculation
            width = width - parseInt($("#video-player").parent().css('padding-left'));
            width = width - parseInt($("#video-player").parent().css('padding-right'));
            // Set width to fill parent element, Set height
            singlePlayer.width(width).height( width * aspectRatio );
          }
        
          resizeVideoJS(); // Initialize the function
          window.onresize = resizeVideoJS; // Call the function on resize
        });
    });
  </script>
{{/contentFor}}